server.port=9527
spring.application.name=DataMagic
spring.jackson.time-zone=UTC
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.serialization.write-date-keys-as-timestamps=false
spring.jackson.deserialization.adjust-dates-to-context-time-zone=false
spring.main.allow-circular-references=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# primary datasource(datapie)
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.name=sourcePool
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# software.aws.rds.jdbc.mysql.Driver and jdbc:mysql:aws://for aws rds mysql
spring.datasource.url=jdbc:mysql://datapie.cnqbtlcpe5hy.us-east-2.rds.amazonaws.com:3306/datapie?useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=
spring.datasource.password=
spring.datasource.max-active=50
spring.datasource.initial-size=10
spring.datasource.min-idle=10
spring.datasource.max-wait=10000

#secondary datasource(mlflow)
datasource.mlflow.id=8
datasource.mlflow.name=mlflow
datasource.mlflow.type=mysql
datasource.mlflow.url=datapie.cnqbtlcpe5hy.us-east-2.rds.amazonaws.com:3306/mlflow
datasource.mlflow.username=
datasource.mlflow.password=
datasource.mlflow.params=[{"name":"characterEncoding","value":"UTF-8"},{"name":"serverTimezone","value":"UTC"}]

# datasource pool HikariCp config
# the config doesn't work for my Hikari datasource
# So I set maxpoolsize to 150
# check connect in mysql 'show processlist'
# Why? What should I do?
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.maximum-pool-size=150
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime=60000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
# 0: disabled
spring.datasource.hikari.keepalive-time=0


# datasource pool Druid config
spring.datasource.druid.initial-size=2
spring.datasource.druid.min-idle=2
spring.datasource.druid.maxActive=23
spring.datasource.druid.maxWait=20000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.minEvictableIdleTimeMillis=300000
spring.datasource.druid.max-evictable-idle-time-millis=800000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall
spring.datasource.druid.connectionProperties=druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
spring.datasource.druid.aop-patterns=com.ninestar.datapie.datamagic.*
# enable web-stat-filter for session and web monitoring
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true 
spring.datasource.druid.web-stat-filter.session-stat-max-count=100
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*

# enable stat-view-servlet to show the monitor page
# http://localhost:8000/druid/index.html
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.reset-enable=false
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=123456

# spring security config
spring.security.user.name=admin
spring.security.user.password=123456
spring.security.login.page=/auth/login
spring.security.white.list=/auth/register,/auth/captcha,/auth/code,/druid/**,/actuator/**,\
  swagger-ui,/doc.html,/v3/api-docs,/swagger-resources/**,/webjars/**,/ws,file:${web.upload-path}

# JWT config (unit of exp is min)
jwt.authTokenField=Authorization
jwt.accessTokenField=access-token
jwt.shadowTokenField=shadow-token
jwt.tokenPrefix=Bearer
jwt.expiration=30
jwt.secretKey=Good good study! Day day up! Then walk out to have a look at the beautiful world with you family!

spring.web.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,file:${web.upload-path}
web.upload-path=./ftp1/
spring.servlet.multipart.enabled=false
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.file-size-threshold=512KB
spring.servlet.multipart.location=/

# spring JPA config
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext

djl.application-type=OBJECT_DETECTION
djl.input-class=java.awt.image.BufferedImage
djl.output-class=ai.djl.modality.cv.output.DetectedObjects


# spring i18n
spring.web.locale=zh_CN
spring.messages.basename=i18n.msg
spring.messages.encoding=UTF-8

# Knife4j(SpringDoc, swagger3) config
# local UI: http://localhost:9527/doc.html
# Swagger will be disabled for production
# enable MUST be true otherwise you will get error "OpenApiExtensionResolver could not be found"
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
knife4j.production=false
knife4j.enable=true
knife4j.cors=true
knife4j.basic.enable=true
knife4j.basic.username=admin
knife4j.basic.password=123456
knife4j.setting.language=zh-CN
knife4j.setting.enableDebug=true
knife4j.setting.enableOpenApi=true
knife4j.setting.enableSwaggerModels=true
knife4j.setting.enableDocumentManage=true
knife4j.setting.enableHomeCustom=false


# slf4j log config
logging.config=classpath:log4j2-spring.xml
project.ignoreNullWsContainer=true


# Spring redis config
spring.redis.cache.enabled=false
spring.redis.msg.enabled=true
spring.redis.database=0
spring.redis.password=
spring.redis.port=6379
spring.redis.host=127.0.0.1
spring.redis.lettuce.pool.min-idle=5
spring.redis.lettuce.pool.max-idle=10
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-wait=1ms
spring.redis.lettuce.shutdown-timeout=100ms
# used to send msg to python servers
spring.redis.stream.request=downstream
# used to receive msg from python servers
spring.redis.stream.response=upstream
spring.redis.consumer.group=wdc
spring.redis.consumer.name=wdc_01
# used to receive report from python servers
spring.redis.channel.report=feedback

# Stomp config
stomp.channel.report=/wsReport

# Minio config
minio.endpoint.url_=http://localhost:9000
minio.bucket.name_=datapie
# AWS S3 config
minio.endpoint.url=https://s3.us-east-2.amazonaws.com
minio.s3.regin=us-east-2
minio.bucket.name=datapie

# Actuator and prometheus config
# port 7527 doesn't work - Gavin
management.server.port=7788
management.endpoints.web.base-path=/actuator
management.endpoint.env.enabled=false
management.endpoint.metrics.enabled=false
management.endpoint.prometheus.enabled=false
management.metrics.export.prometheus.enabled=false
management.endpoints.web.exposure.include=info,health,metrics,prometheus
management.metrics.tags.application=${spring.application.name}


